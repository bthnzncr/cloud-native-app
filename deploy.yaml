# === RabbitMQ Deployment ===
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: rabbitmq
          image: europe-west2-docker.pkg.dev/tactical-helix-459822-k5/my-repo/rabbitmq:latest
          ports:
            - containerPort: 5672  # AMQP
            - containerPort: 15672 # Management UI
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_PASS
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "200m"
              memory: "512Mi"

---

# === RabbitMQ LoadBalancer Service ===
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  type: LoadBalancer
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: management
      port: 15672
      targetPort: 15672

# === API SERVICE ===
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: api-service
          image: europe-west2-docker.pkg.dev/tactical-helix-459822-k5/my-repo/api-service:latest
          command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
          ports:
            - containerPort: 8000
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGO_URI
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_NAME
            - name: ARTICLE_COLLECTION
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ARTICLE_COLLECTION
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: LoadBalancer

# === CONSUMER SERVICE ===
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer-service
  template:
    metadata:
      labels:
        app: consumer-service
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: consumer-service
          image: europe-west2-docker.pkg.dev/tactical-helix-459822-k5/my-repo/consumer-service:latest
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGO_URI
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DB_NAME
            - name: ARTICLE_COLLECTION
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: ARTICLE_COLLECTION
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_USER
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_PASS
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_PORT
            - name: RABBITMQ_QUEUE
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: RABBITMQ_QUEUE
            - name: SIMILARITY_THRESHOLD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SIMILARITY_THRESHOLD
            - name: DEDUPLICATION_WINDOW_HOURS
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: DEDUPLICATION_WINDOW_HOURS
          resources:
            requests:
              cpu: "1000m"
              memory: "2Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"

# === FRONTEND ===
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      containers:
        - name: frontend
          image: europe-west2-docker.pkg.dev/tactical-helix-459822-k5/my-repo/frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: VUE_APP_API_URL
              value: "http://api-service:8000"
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
