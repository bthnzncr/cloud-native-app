version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123123123
      - MONGO_INITDB_DATABASE=news_aggregator
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "mongodb://admin:123123123@localhost:27017/admin?authSource=admin", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management interface
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Fetcher service - configured as a cronjob
  fetcher-service:
    build:
      context: ./backend/fetcher-service
      dockerfile: Dockerfile
    container_name: fetcher-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_QUEUE=rss_fetcher_queue
      - FETCH_INTERVAL_MINUTES=5
      - RSS_FEEDS_STRING="http://rss.cnn.com/rss/edition.rss,https://rss.nytimes.com/services/xml/rss/nyt/World.xml,https://www.theguardian.com/world/rss,https://feeds.npr.org/1001/rss.xml,https://www.cnbc.com/id/100003114/device/rss/rss.html,https://www.politico.com/rss/politicopicks.xml,http://feeds.foxnews.com/foxnews/latest
    deploy:
      restart_policy:
        condition: none
    labels:
      - "ofelia.enabled=true"
      - "ofelia.job-exec.fetcher.schedule=@every 1m"
      - "ofelia.job-exec.fetcher.command=python -m app.main"

  # Ofelia - Job Scheduler for Docker
  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    depends_on:
      - fetcher-service
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # Consumer service
  consumer-service:
    build:
      context: ./backend/consumer-service
      dockerfile: Dockerfile
    container_name: consumer-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://admin:123123123@mongodb:27017/news_aggregator?authSource=admin
      - DB_NAME=news_aggregator
      - ARTICLE_COLLECTION=articles
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_QUEUE=rss_fetcher_queue
      - SIMILARITY_THRESHOLD=0.7
      - DEDUPLICATION_WINDOW_HOURS=12
    restart: unless-stopped

  # API service
  api-service:
    build:
      context: ./backend/api-service
      dockerfile: Dockerfile
    container_name: api-service
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://admin:123123123@mongodb:27017/news_aggregator?authSource=admin
      - DB_NAME=news_aggregator
      - ARTICLE_COLLECTION=articles
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
  rabbitmq_data:
